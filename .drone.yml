kind: pipeline
type: docker
name: develop push
steps:
    - name: restore-cache
      image: meltwater/drone-cache
      environment:
          PLUGIN_JSON_KEY:
              from_secret: google_credentials
      settings:
          backend: gcs
          cache_key: '{{ .Repo.Name }}_{{ checksum "yarn.lock" }}'
          restore: true
          archive_format: "zstd"
          bucket: cometh-drone-cache-bucket
          mount:
              - "node_modules"
    - name: compile
      image: node:16
      commands:
          - yarn install
          - yarn build --mode production
      environment:
          VITE_NETWORK: "Goerli"
    - name: rebuild-cache
      image: meltwater/drone-cache
    - name: build and push
      image: plugins/gcr
      settings:
          dockerfile: Dockerfile
          registry: gcr.io/infra-342714
          repo: ${DRONE_REPO_NAME}
          cache_from: gcr.io/infra-342714/${DRONE_REPO_NAME}:develop
          tags:
              - develop
          json_key:
              from_secret: google_credentials
      depends_on: [compile]
    - name: rolling update
      image: gcr.io/infra-342714/app-rolling-update:latest
      environment:
          GCP_SA:
              from_secret: google_credentials
          SERVICE: devcon-raffle-backend
          ENVIRONMENT: develop
      depends_on: [build and push]
    - name: discord notification
      image: appleboy/drone-discord
      settings:
          webhook_id:
              from_secret: discord_webhook_id
          webhook_token:
              from_secret: discord_webhook_token
          username: drone
          message: >
              {{#success build.status}}
                build push and rolling update for develop {{repo.name}} succeeded.
                {{build.link}}
              {{else}}
                 build push and rolling update for develop {{repo.name}} failed. Fix me please.
                {{build.link}}
              {{/success}}
      when:
          status: [success, failure]
trigger:
    branch:
        - develop
    event:
        - push
image_pull_secrets:
    - dockerconfigjson
---
kind: pipeline
type: docker
name: prod push
steps:
    - name: restore-cache
      image: meltwater/drone-cache
      environment:
          PLUGIN_JSON_KEY:
              from_secret: google_credentials
      settings:
          backend: gcs
          cache_key: '{{ .Repo.Name }}_{{ checksum "yarn.lock" }}'
          restore: true
          archive_format: "zstd"
          bucket: cometh-drone-cache-bucket
          mount:
              - "node_modules"
    - name: compile
      image: node:16
      commands:
          - yarn install
          - yarn build --mode production
      environment:
          VITE_NETWORK: "Goerli"
    - name: rebuild-cache
      image: meltwater/drone-cache
      environment:
          PLUGIN_JSON_KEY:
              from_secret: google_credentials
      settings:
          backend: gcs
          cache_key: '{{ .Repo.Name }}_{{ checksum "yarn.lock" }}'
          rebuild: true
          archive_format: "zstd"
          bucket: cometh-drone-cache-bucket
          mount:
              - "node_modules"
      depends_on: [compile]
    - name: build and push
      image: plugins/gcr
      settings:
          dockerfile: Dockerfile
          registry: gcr.io/infra-342714
          repo: ${DRONE_REPO_NAME}
          cache_from: gcr.io/infra-342714/${DRONE_REPO_NAME}:develop
          tags:
              - prod
          json_key:
              from_secret: google_credentials
      depends_on: [compile]
    - name: rolling update
      image: gcr.io/infra-342714/app-rolling-update:latest
      environment:
          GCP_SA:
              from_secret: google_credentials
          SERVICE: devcon-raffle-backend
          ENVIRONMENT: prod
      depends_on: [build and push]
    - name: discord notification
      image: appleboy/drone-discord
      settings:
          webhook_id:
              from_secret: discord_webhook_id
          webhook_token:
              from_secret: discord_webhook_token
          username: drone
          message: >
              {{#success build.status}}
                build push and rolling update for {{repo.name}} succeeded.
                {{build.link}}
              {{else}}
                 build push and rolling update for {{repo.name}} failed. Fix me please.
                {{build.link}}
              {{/success}}
      when:
          status: [success, failure]
trigger:
    branch:
        - main
    event:
        - push
image_pull_secrets:
    - dockerconfigjson
